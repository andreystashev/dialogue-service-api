[tool.ruff]
line-length = 120
select = [
     "A",
#    "ANN", # too strong type annotation rules
#    "ARG", # unused arguments
    "ASYNC",
    "B",
    "BLE",
    "C",
    "COM",
#    "D", # rules for docstrings
    "DJ",
#    "DTZ", # rules that forces to use timezones
    "E",
#    "EM", # forbids to have strings in exceptions
    "ERA",
    "EXE",
    "F",
#    "FBT", # forbids to have bools in function args
    "G",
    "I",
    "ICN",
    "INP",
    "ISC",
    "N",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
#    "PTH", # forces to use pathlib instead of os.path
    "PYI",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
#    "SLF", # forbids to access to private members
    "T",
    "TCH",
    "TID",
#    "TRY", # too tough rules for exceptions
    "UP",
    "W",
    "YTT",
    "ANN001",
]
ignore = [
    'C408', # dict call
    'T201', # print
    'TRY002', # Create your own exception
    'COM812', # Trailing comma missing
    'PT023', # pytest mark icorrect mark parenthesis style
    'TRY003', # Avoid specifying long messages outside the exception class
    'C90', # avoid complex code
    'A002', # Argument `id` is shadowing a Python builtin
    'A003', # Class attribute `id` is shadowing a Python builtin
    'N818', # Exception name should be named with an Error suffix
    'B904', # Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    'S311', # Standard pseudo-random generators are not suitable for security/cryptographic purposes
    'RUF001', 'RUF002', 'RUF003', # ignore russian letters
    'S101', 'S105', 'S107', # possible hardcoded passwords
    'PT004', # Fixture  does not return anything, add leading underscore
    'RUF009', # Do not perform function call `get_env` in dataclass defaults
    'PLR0913', # too many arguments to function call
    'S104', # possible binding to all interfaces
    'B008', # Do not perform function call in argument defaults
    'PLW1508', # Invalid type for environment variable default
    'F841', # unused variables
    'N805', # First argument of a method should be named `self`
    'EXE002', #The file is executable but no shebang is present
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "migrations",
    "venv",
]

[tool.ruff.per-file-ignores]
"tests/**" = ["PLR2004", 'S101', 'S106', 'ERA001', 'ANN001', 'PLR0915']
"db/repositories/**" = ['SIM300', 'E711', 'E712'] # avoid changing of sql queries

[tool.ruff.flake8-quotes]
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.isort]
combine-as-imports = true
lines-between-types = 0
lines-after-imports = 2
